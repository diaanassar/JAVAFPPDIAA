public class Shape {
    protected String color;
    
    public Shape(String color) {
        this.color = color;
    }
    
    public double calculateArea() {
        return 0.0;
    }
    
    public double calculatePerimeter() {
        return 0.0;
    }
}

public class Rectangle extends Shape {
    protected double width;
    protected double height;
    
    public Rectangle(String color, double width, double height) {
        super(color);
        this.width = width;
        this.height = height;
    }
    
    public double calculateArea() {
        return width * height;
    }
    
    public double calculatePerimeter() {
        return 2 * (width + height);
    }
}

public class Circle extends Shape {
    protected double radius;
    protected final double PI = 3.14159;
    
    public Circle(String color, double radius) {
        super(color);
        this.radius = radius;
    }
    
    public double calculateArea() {
        return PI * radius * radius;
    }
    
    public double calculatePerimeter() {
        return 2 * PI * radius;
    }
}

public class Square extends Rectangle {
    
    public Square(String color, double side) {
        super(color, side, side);
    }
}

public class ShapeTest {
    
    public static void printTotal(Shape[] shapes) {
        double totalArea = 0.0;
        double totalPerimeter = 0.0;
        
        for (Shape shape : shapes) {
            totalArea += shape.calculateArea();
            totalPerimeter += shape.calculatePerimeter();
        }
        
        System.out.println("Total area: " + totalArea);
        System.out.println("Total perimeter: " + totalPerimeter);
    }
    
    public static void main(String[] args) {
        Shape[] shapes = new Shape[5];
        shapes[0] = new Rectangle("red", 5.0, 10.0);
        shapes[1] = new Circle("blue", 7.0);
        shapes[2] = new Square("green", 4.0);
        shapes[3] = new Rectangle("yellow", 3.0, 6.0);
        shapes[4] = new Circle("purple", 5.0);
        
        printTotal(shapes);
    }
}
