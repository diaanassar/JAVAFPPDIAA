package Stack;

class Node {
    Object data;
    Node next;

    public Node(Object data) {
        this.data = data;
        next = null;
    }
}

interface Stack {
    public void push(Object item);

    public Object pop();

    public Object peek();

    public boolean isEmpty();

    public int size();
}

class LinkedListStack implements Stack {
    private Node top; // stack top
    private int size; // number of items in the stack

    public LinkedListStack() {
        top = null;
        size = 0;
    }

    public void push(Object item) {
        Node newNode = new Node(item); // create a new node
        newNode.next = top; // set the new node's next to current top
        top = newNode; // set the new node as the new top
        size++; // increment size
    }

    public Object pop() {
        if (isEmpty()) {
            System.out.println("Stack is empty");
            return null;
        }
        Object item = top.data; // access top item
        top = top.next; // move top to the next node
        size--; // decrement size
        return item;
    }

    public Object peek() {
        if (isEmpty())
            return null;
        return top.data;
    }

    public boolean isEmpty() {
        return (top == null);
    }

    public int size() {
        return size;
    }
}

public class LinkedListStackDemo {
    public static void main(String[] args) {
        LinkedListStack stk = new LinkedListStack(); // create stack using linked list
        stk.push('A'); // push 3 items onto stack
        stk.push('B');
        stk.push('C');
        stk.push('D');

        System.out.println("size(): " + stk.size());
        System.out.println(stk.pop() + " is deleted");
        stk.push('D'); // add three more items to the stack
        stk.push('E');
        System.out.println(stk.pop() + " is deleted");
        stk.push('G'); // push one item
        System.out.println(stk.peek() + " is on top of stack");
        System.out.println("Size of the Stack : " + stk.size());

        LinkedListStack stk1 = new LinkedListStack();
        stk1.push("Java");
        stk1.push(20);
        stk1.push(30);
    }
}
